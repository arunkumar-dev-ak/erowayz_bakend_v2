enum UserType {
    CUSTOMER
    VENDOR
}

enum DisclaimerType {
    PRODUCT_ORDER
    SERVICE_BOOK
    BANNER_BOOK
    COINS
    UPI
    BLOOD
}

enum PrivacyPolicyType {
    COINS
    UPI
    BLOOD
}

enum TermsAndConditionType {
    COINS
    UPI
    BLOOD
}

model LicenseCategory {
    id               String             @id @default(uuid())
    name             String @unique
    tamilName        String?
    status           Status             @default(ACTIVE)

    createdAt        DateTime           @default(now())
    updatedAt        DateTime           @updatedAt

    license         License[]
}

model ProductUnit {
    id               String             @id @default(uuid())
    name             String @unique
    tamilName        String?
    status           Status             @default(ACTIVE)

    createdAt        DateTime           @default(now())
    updatedAt        DateTime           @updatedAt

    item            Item[]
}

model ShopCategory {
    id               String             @id @default(uuid())
    name             String
    tamilName        String?
    vendorTypeId     String
    status           Status             @default(ACTIVE)

    createdAt        DateTime           @default(now())
    updatedAt        DateTime           @updatedAt

    shopInfo         ShopInfo[]

    vendorType       VendorType     @relation(fields: [vendorTypeId], references: [id], onDelete: Cascade)

    @@unique([name,vendorTypeId])
}

model BankName {
    id               String             @id @default(uuid())
    name             String @unique
    tamilName        String?
    status           Status             @default(ACTIVE)
    image            String

    createdAt        DateTime           @default(now())
    updatedAt        DateTime           @updatedAt

    bankDetail       BankDetail[]
}

model BankPaymentType {
    id               String             @id @default(uuid())
    name             String @unique
    tamilName        String?
    status           Status             @default(ACTIVE)
    image            String

    createdAt        DateTime           @default(now())
    updatedAt        DateTime           @updatedAt

    bankDetail       BankDetail[]
}

model ShopCity {
    id               String             @id @default(uuid())
    name             String @unique
    tamilName        String?
    status           Status             @default(ACTIVE)

    createdAt        DateTime           @default(now())
    updatedAt        DateTime           @updatedAt

    shopInfo         ShopInfo[]
}

model Disclaimer {
    id               String             @id @default(uuid())
    disclaimerType   DisclaimerType
    disclaimerHtml    String    @db.Text
    disclaimerHtmlTa  String    @db.Text

    createdAt        DateTime           @default(now())
    updatedAt        DateTime           @updatedAt
}

model TermsAndCondition {
    id               String             @id @default(uuid())
    userType         UserType
    type             TermsAndConditionType?
    vendorTypeId     String?
    termsAndConditionHtml    String    @db.Text
    termsAndConditionHtmlTa  String    @db.Text

    createdAt        DateTime           @default(now())
    updatedAt        DateTime           @updatedAt

    @@unique([vendorTypeId])
    vendorType      VendorType?  @relation(fields: [vendorTypeId], references: [id], onDelete: Cascade)
}

model PrivacyPolicy {
    id               String             @id @default(uuid())
    userType         UserType
    type             PrivacyPolicyType?
    vendorTypeId     String?
    privacyPolicyHtml    String    @db.Text
    privacyPolicyHtmlTa  String    @db.Text

    createdAt        DateTime           @default(now())
    updatedAt        DateTime           @updatedAt

    @@unique([vendorTypeId])
    vendorType      VendorType?  @relation(fields: [vendorTypeId], references: [id], onDelete: Cascade)
}

model VideoLink {
    id               String             @id @default(uuid())
    heading          String
    tamilHeading     String?
    vendorTypeId     String?
    link             String
    status           Status             @default(ACTIVE)

    createdAt        DateTime           @default(now())
    updatedAt        DateTime           @updatedAt
    vendorType      VendorType?  @relation(fields: [vendorTypeId], references: [id], onDelete: Cascade)

    
}

model Poster {
    id               String             @id @default(uuid())
    file              String
    heading          String
    userType         UserType
    vendorTypeId     String?
    status           Status             @default(ACTIVE)

    createdAt        DateTime           @default(now())
    updatedAt        DateTime           @updatedAt
    vendorType       VendorType?  @relation(fields: [vendorTypeId], references: [id], onDelete: Cascade)
}